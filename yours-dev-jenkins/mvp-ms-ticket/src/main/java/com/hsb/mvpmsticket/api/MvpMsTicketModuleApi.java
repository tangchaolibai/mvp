/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.hsb.mvpmsticket.api;

import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.hsb.mvpmsticket.annotation.ResponseConfig;
import com.hsb.mvpmsticket.exception.MvpMsTicketException;
import com.hsb.mvpmsticket.model.payload.response.BaseResponse;
import com.hsb.mvpmsticket.model.payload.response.BuyTicketsResponse;
import com.hsb.mvpmsticket.model.payload.response.CinemaDetailResponse;
import com.hsb.mvpmsticket.model.payload.response.CityListResponse;
import com.hsb.mvpmsticket.model.payload.response.GetCinemasResponse;
import com.hsb.mvpmsticket.model.payload.response.GetMovieDetailResponse;
import com.hsb.mvpmsticket.model.payload.response.GetMoviesResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;

@Api(tags = "票务模块")
public interface MvpMsTicketModuleApi {

    @ApiOperation(value = "查询当天上映的影片", nickname = "getFilms", notes = "查询当天上映的影片", response = GetMoviesResponse.class)
    @ResponseConfig(@ApiResponse(code = 200, message = "OK", response = GetMoviesResponse.class))
    @GetMapping(value = "/films", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<GetMoviesResponse> getFilms();
    
    
    @ApiOperation(value = "查询影片详情", nickname = "getMovieDetail", notes = "查询影片详情", response = GetMovieDetailResponse.class)
    @ResponseConfig(@ApiResponse(code = 200, message = "OK", response = GetMovieDetailResponse.class))
    @GetMapping(value = "films/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<GetMovieDetailResponse> getMovieDetail(@ApiParam(value = "影片ID", required = true)@Validated @PathVariable Integer id);
    
    
    @ApiOperation(value = "查询即将上映的影片", nickname = "getMovies", notes = "查询即将上映的影片", response = GetMoviesResponse.class)
    @ResponseConfig(@ApiResponse(code = 200, message = "OK", response = GetMoviesResponse.class))
    @GetMapping(value = "/upcoming/films", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<GetMoviesResponse> getUpComingFilms();
    
    
    @ApiOperation(value = "查询影院列表", nickname = "getCinemas", notes = "查询影院列表", response = GetCinemasResponse.class)
    @ResponseConfig(@ApiResponse(code = 200, message = "OK", response = GetCinemasResponse.class))
    @GetMapping(value = "/cinemas", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<GetCinemasResponse> getCinemas(@ApiParam(value = "城市", required = true)@Validated @RequestParam String city);
    
    
    @ApiOperation(value = "查询某一影片的影院列表", nickname = "getCinemasForOneFilm", notes = "查询某一影片的影院列表", response = GetCinemasResponse.class)
    @ResponseConfig(@ApiResponse(code = 200, message = "OK", response = GetCinemasResponse.class))
	@GetMapping(value = "/cinemas", produces = MediaType.APPLICATION_JSON_VALUE, params = {"filmId"})
	ResponseEntity<GetCinemasResponse> getCinemasForOneFilm(
			@ApiParam(value = "城市", required = true)@Validated @RequestParam String city,
			@ApiParam(value = "影片ID", required = true)@Validated @RequestParam Integer filmId);


	@ApiOperation(value = "查询影院详情", nickname = "getCinemaDetail", notes = "查询影院详情", response = CinemaDetailResponse.class)
	@ResponseConfig(@ApiResponse(code = 200, message = "OK", response = CinemaDetailResponse.class))
    @GetMapping(value = "/cinema/{cinemaId}", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<CinemaDetailResponse> getCinemaDetail(@ApiParam(value = "影片ID", required = true)@Validated @PathVariable Integer cinemaId);
    
	
    @ApiOperation(value = "购票", nickname = "buyTickets", notes = "购票", response = BuyTicketsResponse.class)
    @ResponseConfig(@ApiResponse(code = 200, message = "OK", response = BuyTicketsResponse.class))
    @PostMapping(value = "/movie/buyTickets/{scheduleId}/{count}", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<BuyTicketsResponse> buyTickets(@ApiParam(value = "排片ID", required = true)@Validated @PathVariable Integer scheduleId,
    		@ApiParam(value = "购票数量", required = true)@Validated @PathVariable Integer count) throws MvpMsTicketException;
    
    
    @ApiOperation(value = "初始化数据", nickname = "loadInit", notes = "初始化数据", response = BaseResponse.class)
    @ResponseConfig
    @PostMapping(value = "/movie/buyTickets/loadInitData", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<BaseResponse> loadInitData();
    
    @ApiOperation(value = "查找城市列表", notes = "查找已经开通的影城城市列表", response = CityListResponse.class)
    @ResponseConfig(@ApiResponse(code = 200, message = "OK", response = CityListResponse.class))
    @GetMapping(value = "/citys", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<CityListResponse> findCityList();
    
    @ApiOperation(value = "新增城市", notes = "新增开通影城的城市", response = BaseResponse.class)
    @ResponseConfig
    @PostMapping(value = "/citys/add", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<BaseResponse> addCity(@ApiParam(value = "城市名称", required = true)@Validated @RequestParam String city) throws MvpMsTicketException;
    
}
