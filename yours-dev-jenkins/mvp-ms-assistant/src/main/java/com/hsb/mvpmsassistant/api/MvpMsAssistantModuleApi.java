/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.hsb.mvpmsassistant.api;

import org.springframework.data.domain.Pageable;
import org.springframework.data.web.PageableDefault;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.lang.NonNull;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.hsb.mvpmsassistant.annotation.JwtIgnore;
import com.hsb.mvpmsassistant.constant.Swagger2Constants;
import com.hsb.mvpmsassistant.model.payload.ExceptionResponse;
import com.hsb.mvpmsassistant.model.payload.request.SearchRequest;
import com.hsb.mvpmsassistant.model.payload.response.GetOneResultResponse;
import com.hsb.mvpmsassistant.model.payload.response.InitDataResponse;
import com.hsb.mvpmsassistant.model.payload.response.SearchPhotosResponse;
import com.hsb.mvpmsassistant.model.payload.response.SearchProductsResponse;
import com.hsb.mvpmsassistant.model.payload.response.SearchUsersResponse;
import com.hsb.mvpmsassistant.model.payload.response.SearchVideosResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import springfox.documentation.annotations.ApiIgnore;

@Api(tags = "MvpMs Assistant Module", description = "The MvpMS Assistant Module API")
public interface MvpMsAssistantModuleApi {

	@JwtIgnore
    @ApiOperation(value = "Search Photos", nickname = "searchPhotos", notes = "Search Photos", response = SearchPhotosResponse.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_200, response = SearchPhotosResponse.class),
        @ApiResponse(code = 400, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_400, response = ExceptionResponse.class),
        @ApiResponse(code = 500, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_500, response = ExceptionResponse.class)})
	@ApiImplicitParams({
        @ApiImplicitParam(name = "page", dataType = "int", paramType = "query", defaultValue = "0", example = "0", value = "Results page you want to retrieve (0..N)"),
        @ApiImplicitParam(name = "size", dataType = "int", paramType = "query", defaultValue = "10", example = "10", value = "Number of records per page.")
	})
    @PostMapping(value = "/photos", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<SearchPhotosResponse> searchPhotos(@ApiIgnore @NonNull Pageable pageable, @ApiParam(value = "keyWord of search", required = true)@Validated @RequestBody SearchRequest searchRequest);

    
    @JwtIgnore
    @ApiOperation(value = "Search Products", nickname = "searchProducts", notes = "Search Products", response = SearchProductsResponse.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_200, response = SearchProductsResponse.class),
        @ApiResponse(code = 400, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_400, response = ExceptionResponse.class),
        @ApiResponse(code = 500, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_500, response = ExceptionResponse.class)})
    @ApiImplicitParams({
        @ApiImplicitParam(name = "page", dataType = "int", paramType = "query", defaultValue = "0", example = "0", value = "Results page you want to retrieve (0..N)"),
        @ApiImplicitParam(name = "size", dataType = "int", paramType = "query", defaultValue = "10", example = "10", value = "Number of records per page.")
	})
    @PostMapping(value = "/products", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<SearchProductsResponse> searchProducts(@ApiIgnore @NonNull Pageable pageable, @ApiParam(value = "keyWord of search", required = true)@Validated @RequestBody SearchRequest searchRequest);
    
    
    @JwtIgnore
    @ApiOperation(value = "Search Users", nickname = "searchUsers", notes = "Search Users", response = SearchUsersResponse.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_200, response = SearchUsersResponse.class),
        @ApiResponse(code = 400, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_400, response = ExceptionResponse.class),
        @ApiResponse(code = 500, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_500, response = ExceptionResponse.class)})
    @ApiImplicitParams({
        @ApiImplicitParam(name = "page", dataType = "int", paramType = "query", defaultValue = "0", example = "0", value = "Results page you want to retrieve (0..N)"),
        @ApiImplicitParam(name = "size", dataType = "int", paramType = "query", defaultValue = "10", example = "10", value = "Number of records per page.")
	})
    @PostMapping(value = "/users", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<SearchUsersResponse> searchUsers(@ApiIgnore @NonNull Pageable pageable, @ApiParam(value = "keyWord of search", required = true)@Validated @RequestBody SearchRequest searchRequest);
    
    
    @JwtIgnore
    @ApiOperation(value = "Search Videos", nickname = "searchVideos", notes = "Search Videos", response = SearchVideosResponse.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_200, response = SearchVideosResponse.class),
        @ApiResponse(code = 400, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_400, response = ExceptionResponse.class),
        @ApiResponse(code = 500, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_500, response = ExceptionResponse.class)})
    @ApiImplicitParams({
        @ApiImplicitParam(name = "page", dataType = "int", paramType = "query", defaultValue = "0", example = "0", value = "Results page you want to retrieve (0..N)"),
        @ApiImplicitParam(name = "size", dataType = "int", paramType = "query", defaultValue = "10", example = "10", value = "Number of records per page.")
	})
    @PostMapping(value = "/videos", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<SearchVideosResponse> searchVideos(@ApiIgnore @NonNull Pageable pageable, @ApiParam(value = "keyWord of search", required = true)@Validated @RequestBody SearchRequest searchRequest);
    
    
    @JwtIgnore
    @ApiOperation(value = "Get one search result", nickname = "getOneResult", notes = "Get one search result", response = GetOneResultResponse.class)
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_200, response = GetOneResultResponse.class),
        @ApiResponse(code = 400, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_400, response = ExceptionResponse.class),
        @ApiResponse(code = 500, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_500, response = ExceptionResponse.class)})
    @PostMapping(value = "/result", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<GetOneResultResponse> getOneResult(@ApiIgnore @PageableDefault(page = 0, size = 1) Pageable pageable, @ApiParam(value = "keyWord of search", required = true)@Validated @RequestBody SearchRequest searchRequest);
    
    
    @JwtIgnore
    @ApiOperation(value = "Run Data Initialization", nickname = "initData", notes = "Run Data Initialization", response = InitDataResponse.class)
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_200, response = InitDataResponse.class),
            @ApiResponse(code = 400, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_400, response = ExceptionResponse.class),
            @ApiResponse(code = 500, message = Swagger2Constants.HTTP_STATUS_CODE_MSG_500, response = ExceptionResponse.class)})
    @GetMapping(value = "/loadInitData", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<InitDataResponse> initData();
    
}
