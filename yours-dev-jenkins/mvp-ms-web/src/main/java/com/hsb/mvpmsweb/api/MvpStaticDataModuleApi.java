/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.hsb.mvpmsweb.api;

import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

import com.github.xiaoymin.knife4j.annotations.ApiOperationSupport;
import com.hsb.mvpmsweb.api.annotation.JwtIgnore;
import com.hsb.mvpmsweb.api.annotation.ResponseConfig;
import com.hsb.mvpmsweb.constant.HttpStatusCodeConstants;
import com.hsb.mvpmsweb.constant.Swagger2Constants;
import com.hsb.mvpmsweb.model.payload.request.CountriesAndRegionsIdRequest;
import com.hsb.mvpmsweb.model.payload.staticData.response.CountriesAndRegionsAreaCodeListResponse;
import com.hsb.mvpmsweb.model.payload.staticData.response.CountriesAndRegionsResponse;
import com.hsb.mvpmsweb.model.payload.staticData.response.InitDataResponse;
import com.hsb.mvpmsweb.model.payload.staticData.response.SystemNotificationListResponse;
import com.hsb.mvpmsweb.model.payload.staticData.response.SystemNotificationResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;

@Api(tags = Swagger2Constants.TAG_NM_STATIC_DATA, description = Swagger2Constants.TAG_DESC_STATIC_DATA)
public interface MvpStaticDataModuleApi {

	@JwtIgnore
    @ApiOperation(value = "init Countries And Regions Data", nickname = "initCountriesAndRegionsData", notes = "init Countries And Regions Data", response = InitDataResponse.class)
	@ApiOperationSupport(order = 1, author = "mojianheng@formssi.com")
	@ResponseConfig(@ApiResponse(code = 200, message = HttpStatusCodeConstants.MSG_200, response = InitDataResponse.class))
    @GetMapping(value = "/initData/countriesAndRegions", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<InitDataResponse> initCountriesAndRegionsData();

    
	@JwtIgnore
    @ApiOperation(value = "get Active Countries And Regions Area Code List", nickname = "getCountriesAndRegionsAreaCodeList", notes = "Get Active Countries And Regions Area Code List", response = CountriesAndRegionsAreaCodeListResponse.class)
	@ApiOperationSupport(order = 2, author = "mojianheng@formssi.com")
	@ResponseConfig(@ApiResponse(code = 200, message = HttpStatusCodeConstants.MSG_200, response = CountriesAndRegionsAreaCodeListResponse.class))
    @GetMapping(value = "/areaCode/countriesAndRegions/active", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<CountriesAndRegionsAreaCodeListResponse> getCountriesAndRegionsAreaCodeList(@RequestParam(name = "keyWord", defaultValue = "") String keyWord);
	
	
	@JwtIgnore
    @ApiOperation(value = "modify Countries And Regions Active Field", nickname = "modifyActive", notes = "modify Countries And Regions Active Field", response = CountriesAndRegionsResponse.class)
	@ApiOperationSupport(order = 3, author = "mojianheng@formssi.com")
	@ResponseConfig(@ApiResponse(code = 200, message = HttpStatusCodeConstants.MSG_200, response = CountriesAndRegionsResponse.class))
    @PostMapping(value = "/areaCode/countriesAndRegions/modifyActive", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<CountriesAndRegionsResponse> modifyActive(@ApiParam(value = "countriesAndRegions id", required = true) @RequestBody CountriesAndRegionsIdRequest request);
	
	
	@JwtIgnore
    @ApiOperation(value = "modify Countries And Regions Prohibit Field", nickname = "modifyProhibit", notes = "modify Countries And Regions Prohibit Field", response = CountriesAndRegionsResponse.class)
	@ApiOperationSupport(order = 4, author = "mojianheng@formssi.com")
	@ResponseConfig(@ApiResponse(code = 200, message = HttpStatusCodeConstants.MSG_200, response = CountriesAndRegionsResponse.class))
    @PostMapping(value = "/areaCode/countriesAndRegions/modifyProhibit", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<CountriesAndRegionsResponse> modifyProhibit(@ApiParam(value = "countriesAndRegions id", required = true) @RequestBody CountriesAndRegionsIdRequest request);
	
	
	@JwtIgnore
    @ApiOperation(value = "init System Notificaiton Data", nickname = "initSystemNotificaitonData", notes = "init System Notificaiton Data", response = InitDataResponse.class)
	@ApiOperationSupport(order = 5, author = "mojianheng@formssi.com")
	@ResponseConfig(@ApiResponse(code = 200, message = HttpStatusCodeConstants.MSG_200, response = InitDataResponse.class))
    @GetMapping(value = "/initData/systemNotification", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<InitDataResponse> initSystemNotificaitonData();
	
	
	@JwtIgnore
    @ApiOperation(value = "get System Notificaiton By Id", nickname = "getSystemNotificaitonById", notes = "get System Notificaiton By Id", response = SystemNotificationResponse.class)
	@ApiOperationSupport(order = 6, author = "mojianheng@formssi.com")
	@ResponseConfig(@ApiResponse(code = 200, message = HttpStatusCodeConstants.MSG_200, response = SystemNotificationResponse.class))
    @GetMapping(value = "/systemNotification", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<SystemNotificationResponse> getSystemNotificaitonById(@RequestParam(name = "id") Integer id);
	
	
	@JwtIgnore
    @ApiOperation(value = "get All System Notificaiton", nickname = "getAllSystemNotificaiton", notes = "get All System Notificaiton", response = SystemNotificationListResponse.class)
	@ApiOperationSupport(order = 7, author = "mojianheng@formssi.com")
	@ResponseConfig(@ApiResponse(code = 200, message = HttpStatusCodeConstants.MSG_200, response = SystemNotificationListResponse.class))
    @GetMapping(value = "/systemNotification/all", produces = MediaType.APPLICATION_JSON_VALUE)
    ResponseEntity<SystemNotificationListResponse> getAllSystemNotificaiton();
	
}
